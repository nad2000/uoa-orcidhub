// Code generated by go-swagger; DO NOT EDIT.

package works

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/nad2000/uoa-orcidhub/models"
)

// NewPostAPIV10WorksParams creates a new PostAPIV10WorksParams object
// with the default values initialized.
func NewPostAPIV10WorksParams() *PostAPIV10WorksParams {
	var ()
	return &PostAPIV10WorksParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPIV10WorksParamsWithTimeout creates a new PostAPIV10WorksParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAPIV10WorksParamsWithTimeout(timeout time.Duration) *PostAPIV10WorksParams {
	var ()
	return &PostAPIV10WorksParams{

		timeout: timeout,
	}
}

// NewPostAPIV10WorksParamsWithContext creates a new PostAPIV10WorksParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAPIV10WorksParamsWithContext(ctx context.Context) *PostAPIV10WorksParams {
	var ()
	return &PostAPIV10WorksParams{

		Context: ctx,
	}
}

// NewPostAPIV10WorksParamsWithHTTPClient creates a new PostAPIV10WorksParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAPIV10WorksParamsWithHTTPClient(client *http.Client) *PostAPIV10WorksParams {
	var ()
	return &PostAPIV10WorksParams{
		HTTPClient: client,
	}
}

/*PostAPIV10WorksParams contains all the parameters to send to the API endpoint
for the post API v10 works operation typically these are written to a http.Request
*/
type PostAPIV10WorksParams struct {

	/*Body
	  Work task.

	*/
	Body *models.WorkTask
	/*Filename
	  The batch process filename.

	*/
	Filename *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post API v10 works params
func (o *PostAPIV10WorksParams) WithTimeout(timeout time.Duration) *PostAPIV10WorksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API v10 works params
func (o *PostAPIV10WorksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API v10 works params
func (o *PostAPIV10WorksParams) WithContext(ctx context.Context) *PostAPIV10WorksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API v10 works params
func (o *PostAPIV10WorksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API v10 works params
func (o *PostAPIV10WorksParams) WithHTTPClient(client *http.Client) *PostAPIV10WorksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API v10 works params
func (o *PostAPIV10WorksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post API v10 works params
func (o *PostAPIV10WorksParams) WithBody(body *models.WorkTask) *PostAPIV10WorksParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post API v10 works params
func (o *PostAPIV10WorksParams) SetBody(body *models.WorkTask) {
	o.Body = body
}

// WithFilename adds the filename to the post API v10 works params
func (o *PostAPIV10WorksParams) WithFilename(filename *string) *PostAPIV10WorksParams {
	o.SetFilename(filename)
	return o
}

// SetFilename adds the filename to the post API v10 works params
func (o *PostAPIV10WorksParams) SetFilename(filename *string) {
	o.Filename = filename
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPIV10WorksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Filename != nil {

		// query param filename
		var qrFilename string
		if o.Filename != nil {
			qrFilename = *o.Filename
		}
		qFilename := qrFilename
		if qFilename != "" {
			if err := r.SetQueryParam("filename", qFilename); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
