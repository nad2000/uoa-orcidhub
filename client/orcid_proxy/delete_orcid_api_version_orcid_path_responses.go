// Code generated by go-swagger; DO NOT EDIT.

package orcid_proxy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/nad2000/uoa-orcidhub/models"
)

// DeleteOrcidAPIVersionOrcidPathReader is a Reader for the DeleteOrcidAPIVersionOrcidPath structure.
type DeleteOrcidAPIVersionOrcidPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOrcidAPIVersionOrcidPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteOrcidAPIVersionOrcidPathNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewDeleteOrcidAPIVersionOrcidPathForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteOrcidAPIVersionOrcidPathNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteOrcidAPIVersionOrcidPathUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteOrcidAPIVersionOrcidPathNoContent creates a DeleteOrcidAPIVersionOrcidPathNoContent with default headers values
func NewDeleteOrcidAPIVersionOrcidPathNoContent() *DeleteOrcidAPIVersionOrcidPathNoContent {
	return &DeleteOrcidAPIVersionOrcidPathNoContent{}
}

/*DeleteOrcidAPIVersionOrcidPathNoContent handles this case with default header values.

Record deleted
*/
type DeleteOrcidAPIVersionOrcidPathNoContent struct {
	Payload interface{}
}

func (o *DeleteOrcidAPIVersionOrcidPathNoContent) Error() string {
	return fmt.Sprintf("[DELETE /orcid/api/{version}/{orcid}/{path}][%d] deleteOrcidApiVersionOrcidPathNoContent  %+v", 204, o.Payload)
}

func (o *DeleteOrcidAPIVersionOrcidPathNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrcidAPIVersionOrcidPathForbidden creates a DeleteOrcidAPIVersionOrcidPathForbidden with default headers values
func NewDeleteOrcidAPIVersionOrcidPathForbidden() *DeleteOrcidAPIVersionOrcidPathForbidden {
	return &DeleteOrcidAPIVersionOrcidPathForbidden{}
}

/*DeleteOrcidAPIVersionOrcidPathForbidden handles this case with default header values.

The user hasn't granted acceess to the profile.
*/
type DeleteOrcidAPIVersionOrcidPathForbidden struct {
	Payload *models.Error
}

func (o *DeleteOrcidAPIVersionOrcidPathForbidden) Error() string {
	return fmt.Sprintf("[DELETE /orcid/api/{version}/{orcid}/{path}][%d] deleteOrcidApiVersionOrcidPathForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrcidAPIVersionOrcidPathForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrcidAPIVersionOrcidPathNotFound creates a DeleteOrcidAPIVersionOrcidPathNotFound with default headers values
func NewDeleteOrcidAPIVersionOrcidPathNotFound() *DeleteOrcidAPIVersionOrcidPathNotFound {
	return &DeleteOrcidAPIVersionOrcidPathNotFound{}
}

/*DeleteOrcidAPIVersionOrcidPathNotFound handles this case with default header values.

Resource not found
*/
type DeleteOrcidAPIVersionOrcidPathNotFound struct {
	Payload *models.Error
}

func (o *DeleteOrcidAPIVersionOrcidPathNotFound) Error() string {
	return fmt.Sprintf("[DELETE /orcid/api/{version}/{orcid}/{path}][%d] deleteOrcidApiVersionOrcidPathNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOrcidAPIVersionOrcidPathNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrcidAPIVersionOrcidPathUnsupportedMediaType creates a DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType with default headers values
func NewDeleteOrcidAPIVersionOrcidPathUnsupportedMediaType() *DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType {
	return &DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType{}
}

/*DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType handles this case with default header values.

Missing or invalid ORCID iD.
*/
type DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType struct {
	Payload *models.Error
}

func (o *DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /orcid/api/{version}/{orcid}/{path}][%d] deleteOrcidApiVersionOrcidPathUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteOrcidAPIVersionOrcidPathUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
