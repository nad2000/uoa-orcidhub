// Code generated by go-swagger; DO NOT EDIT.

package orcid_proxy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/nad2000/uoa-orcidhub/models"
)

// PostOrcidAPIVersionOrcidPathReader is a Reader for the PostOrcidAPIVersionOrcidPath structure.
type PostOrcidAPIVersionOrcidPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOrcidAPIVersionOrcidPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostOrcidAPIVersionOrcidPathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewPostOrcidAPIVersionOrcidPathForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostOrcidAPIVersionOrcidPathNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewPostOrcidAPIVersionOrcidPathUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostOrcidAPIVersionOrcidPathOK creates a PostOrcidAPIVersionOrcidPathOK with default headers values
func NewPostOrcidAPIVersionOrcidPathOK() *PostOrcidAPIVersionOrcidPathOK {
	return &PostOrcidAPIVersionOrcidPathOK{}
}

/*PostOrcidAPIVersionOrcidPathOK handles this case with default header values.

successful operation
*/
type PostOrcidAPIVersionOrcidPathOK struct {
	Payload interface{}
}

func (o *PostOrcidAPIVersionOrcidPathOK) Error() string {
	return fmt.Sprintf("[POST /orcid/api/{version}/{orcid}/{path}][%d] postOrcidApiVersionOrcidPathOK  %+v", 200, o.Payload)
}

func (o *PostOrcidAPIVersionOrcidPathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrcidAPIVersionOrcidPathForbidden creates a PostOrcidAPIVersionOrcidPathForbidden with default headers values
func NewPostOrcidAPIVersionOrcidPathForbidden() *PostOrcidAPIVersionOrcidPathForbidden {
	return &PostOrcidAPIVersionOrcidPathForbidden{}
}

/*PostOrcidAPIVersionOrcidPathForbidden handles this case with default header values.

The user hasn't granted acceess to the profile.
*/
type PostOrcidAPIVersionOrcidPathForbidden struct {
	Payload *models.Error
}

func (o *PostOrcidAPIVersionOrcidPathForbidden) Error() string {
	return fmt.Sprintf("[POST /orcid/api/{version}/{orcid}/{path}][%d] postOrcidApiVersionOrcidPathForbidden  %+v", 403, o.Payload)
}

func (o *PostOrcidAPIVersionOrcidPathForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrcidAPIVersionOrcidPathNotFound creates a PostOrcidAPIVersionOrcidPathNotFound with default headers values
func NewPostOrcidAPIVersionOrcidPathNotFound() *PostOrcidAPIVersionOrcidPathNotFound {
	return &PostOrcidAPIVersionOrcidPathNotFound{}
}

/*PostOrcidAPIVersionOrcidPathNotFound handles this case with default header values.

Resource not found
*/
type PostOrcidAPIVersionOrcidPathNotFound struct {
	Payload *models.Error
}

func (o *PostOrcidAPIVersionOrcidPathNotFound) Error() string {
	return fmt.Sprintf("[POST /orcid/api/{version}/{orcid}/{path}][%d] postOrcidApiVersionOrcidPathNotFound  %+v", 404, o.Payload)
}

func (o *PostOrcidAPIVersionOrcidPathNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrcidAPIVersionOrcidPathUnsupportedMediaType creates a PostOrcidAPIVersionOrcidPathUnsupportedMediaType with default headers values
func NewPostOrcidAPIVersionOrcidPathUnsupportedMediaType() *PostOrcidAPIVersionOrcidPathUnsupportedMediaType {
	return &PostOrcidAPIVersionOrcidPathUnsupportedMediaType{}
}

/*PostOrcidAPIVersionOrcidPathUnsupportedMediaType handles this case with default header values.

Missing or invalid ORCID iD.
*/
type PostOrcidAPIVersionOrcidPathUnsupportedMediaType struct {
	Payload *models.Error
}

func (o *PostOrcidAPIVersionOrcidPathUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /orcid/api/{version}/{orcid}/{path}][%d] postOrcidApiVersionOrcidPathUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostOrcidAPIVersionOrcidPathUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
