// Code generated by go-swagger; DO NOT EDIT.

package token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/nad2000/uoa-orcidhub/models"
)

// GetAPIV10TokensIdentifierReader is a Reader for the GetAPIV10TokensIdentifier structure.
type GetAPIV10TokensIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV10TokensIdentifierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAPIV10TokensIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAPIV10TokensIdentifierBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAPIV10TokensIdentifierUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAPIV10TokensIdentifierForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAPIV10TokensIdentifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAPIV10TokensIdentifierOK creates a GetAPIV10TokensIdentifierOK with default headers values
func NewGetAPIV10TokensIdentifierOK() *GetAPIV10TokensIdentifierOK {
	return &GetAPIV10TokensIdentifierOK{}
}

/*GetAPIV10TokensIdentifierOK handles this case with default header values.

successful operation
*/
type GetAPIV10TokensIdentifierOK struct {
	Payload *models.OrcidToken
}

func (o *GetAPIV10TokensIdentifierOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/tokens/{identifier}][%d] getApiV10TokensIdentifierOK  %+v", 200, o.Payload)
}

func (o *GetAPIV10TokensIdentifierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrcidToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10TokensIdentifierBadRequest creates a GetAPIV10TokensIdentifierBadRequest with default headers values
func NewGetAPIV10TokensIdentifierBadRequest() *GetAPIV10TokensIdentifierBadRequest {
	return &GetAPIV10TokensIdentifierBadRequest{}
}

/*GetAPIV10TokensIdentifierBadRequest handles this case with default header values.

Invalid identifier supplied
*/
type GetAPIV10TokensIdentifierBadRequest struct {
}

func (o *GetAPIV10TokensIdentifierBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/tokens/{identifier}][%d] getApiV10TokensIdentifierBadRequest ", 400)
}

func (o *GetAPIV10TokensIdentifierBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAPIV10TokensIdentifierUnauthorized creates a GetAPIV10TokensIdentifierUnauthorized with default headers values
func NewGetAPIV10TokensIdentifierUnauthorized() *GetAPIV10TokensIdentifierUnauthorized {
	return &GetAPIV10TokensIdentifierUnauthorized{}
}

/*GetAPIV10TokensIdentifierUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAPIV10TokensIdentifierUnauthorized struct {
	Payload *models.Error
}

func (o *GetAPIV10TokensIdentifierUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/tokens/{identifier}][%d] getApiV10TokensIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAPIV10TokensIdentifierUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10TokensIdentifierForbidden creates a GetAPIV10TokensIdentifierForbidden with default headers values
func NewGetAPIV10TokensIdentifierForbidden() *GetAPIV10TokensIdentifierForbidden {
	return &GetAPIV10TokensIdentifierForbidden{}
}

/*GetAPIV10TokensIdentifierForbidden handles this case with default header values.

Access Denied
*/
type GetAPIV10TokensIdentifierForbidden struct {
	Payload *models.Error
}

func (o *GetAPIV10TokensIdentifierForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/tokens/{identifier}][%d] getApiV10TokensIdentifierForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV10TokensIdentifierForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10TokensIdentifierNotFound creates a GetAPIV10TokensIdentifierNotFound with default headers values
func NewGetAPIV10TokensIdentifierNotFound() *GetAPIV10TokensIdentifierNotFound {
	return &GetAPIV10TokensIdentifierNotFound{}
}

/*GetAPIV10TokensIdentifierNotFound handles this case with default header values.

The specified resource was not found
*/
type GetAPIV10TokensIdentifierNotFound struct {
	Payload *models.Error
}

func (o *GetAPIV10TokensIdentifierNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/tokens/{identifier}][%d] getApiV10TokensIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIV10TokensIdentifierNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
