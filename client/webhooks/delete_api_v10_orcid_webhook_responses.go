// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/nad2000/uoa-orcidhub/models"
)

// DeleteAPIV10OrcidWebhookReader is a Reader for the DeleteAPIV10OrcidWebhook structure.
type DeleteAPIV10OrcidWebhookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIV10OrcidWebhookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteAPIV10OrcidWebhookNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteAPIV10OrcidWebhookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 415:
		result := NewDeleteAPIV10OrcidWebhookUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAPIV10OrcidWebhookNoContent creates a DeleteAPIV10OrcidWebhookNoContent with default headers values
func NewDeleteAPIV10OrcidWebhookNoContent() *DeleteAPIV10OrcidWebhookNoContent {
	return &DeleteAPIV10OrcidWebhookNoContent{}
}

/*DeleteAPIV10OrcidWebhookNoContent handles this case with default header values.

A webhoook successfully unregistered.
*/
type DeleteAPIV10OrcidWebhookNoContent struct {
}

func (o *DeleteAPIV10OrcidWebhookNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/{orcid}/webhook][%d] deleteApiV10OrcidWebhookNoContent ", 204)
}

func (o *DeleteAPIV10OrcidWebhookNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAPIV10OrcidWebhookNotFound creates a DeleteAPIV10OrcidWebhookNotFound with default headers values
func NewDeleteAPIV10OrcidWebhookNotFound() *DeleteAPIV10OrcidWebhookNotFound {
	return &DeleteAPIV10OrcidWebhookNotFound{}
}

/*DeleteAPIV10OrcidWebhookNotFound handles this case with default header values.

Invalid ORCID iD.
*/
type DeleteAPIV10OrcidWebhookNotFound struct {
	Payload *models.Error
}

func (o *DeleteAPIV10OrcidWebhookNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/{orcid}/webhook][%d] deleteApiV10OrcidWebhookNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAPIV10OrcidWebhookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV10OrcidWebhookUnsupportedMediaType creates a DeleteAPIV10OrcidWebhookUnsupportedMediaType with default headers values
func NewDeleteAPIV10OrcidWebhookUnsupportedMediaType() *DeleteAPIV10OrcidWebhookUnsupportedMediaType {
	return &DeleteAPIV10OrcidWebhookUnsupportedMediaType{}
}

/*DeleteAPIV10OrcidWebhookUnsupportedMediaType handles this case with default header values.

Invalid call-back URL or missing ORCID iD.
*/
type DeleteAPIV10OrcidWebhookUnsupportedMediaType struct {
	Payload *models.Error
}

func (o *DeleteAPIV10OrcidWebhookUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /api/v1.0/{orcid}/webhook][%d] deleteApiV10OrcidWebhookUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *DeleteAPIV10OrcidWebhookUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
